{"ast":null,"code":"import _objectSpread from \"/Users/duraanali/Pictures/Gabi/Sprint-Project-Redux-Countries/countries/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_COUNTRIES_START, FETCH_COUNTRIES_SUCCESS, FETCH_COUNTRIES_FAILURE, ADD_NEW_COUNTRY } from '../actions/CountryActions';\nconst initialState = {\n  countries: []\n};\nexport const countryReducer = (state = initialState, action) => {\n  // Switch Statement, check if state changed\n  switch (action.type) {\n    case FETCH_COUNTRIES_START:\n      return _objectSpread({}, state, {\n        error: null\n      });\n\n    case FETCH_COUNTRIES_SUCCESS:\n      return _objectSpread({}, state, {\n        countries: action.payload\n      });\n\n    case FETCH_COUNTRIES_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    case ADD_NEW_COUNTRY:\n      return _objectSpread({}, state, {\n        countries: [...state.countries, action.payload]\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/duraanali/Pictures/Gabi/Sprint-Project-Redux-Countries/countries/src/reducers/CountryReducer.js"],"names":["FETCH_COUNTRIES_START","FETCH_COUNTRIES_SUCCESS","FETCH_COUNTRIES_FAILURE","ADD_NEW_COUNTRY","initialState","countries","countryReducer","state","action","type","error","payload"],"mappings":";AAAA,SACEA,qBADF,EAEEC,uBAFF,EAGEC,uBAHF,EAKEC,eALF,QAMO,2BANP;AAQA,MAAMC,YAAY,GAChB;AACEC,EAAAA,SAAS,EAAE;AADb,CADF;AAMA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9D;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,qBAAL;AACE,+BACKO,KADL;AAEEG,QAAAA,KAAK,EAAE;AAFT;;AAKA,SAAKT,uBAAL;AACA,+BACKM,KADL;AAEEF,QAAAA,SAAS,EAAEG,MAAM,CAACG;AAFpB;;AAIA,SAAKT,uBAAL;AACA,+BACKK,KADL;AAEEG,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAFhB;;AAKA,SAAKR,eAAL;AACA,+BACKI,KADL;AAEEF,QAAAA,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBG,MAAM,CAACG,OAA5B;AAFb;;AAKF;AACE,aAAOJ,KAAP;AAzBJ;AA2BD,CA7BM","sourcesContent":["import {\n  FETCH_COUNTRIES_START,\n  FETCH_COUNTRIES_SUCCESS,\n  FETCH_COUNTRIES_FAILURE,\n\n  ADD_NEW_COUNTRY,\n} from '../actions/CountryActions';\n\nconst initialState = \n  {\n    countries: [],\n \n  }\n\nexport const countryReducer = (state = initialState, action) => {\n  // Switch Statement, check if state changed\n  switch (action.type) {\n    case FETCH_COUNTRIES_START:\n      return {\n        ...state,\n        error: null\n\n      };\n      case FETCH_COUNTRIES_SUCCESS:\n      return {\n        ...state,\n        countries: action.payload,\n      };\n      case FETCH_COUNTRIES_FAILURE:\n      return {\n        ...state,\n        error: action.payload\n\n      };\n      case ADD_NEW_COUNTRY:\n      return {\n        ...state,\n        countries: [...state.countries, action.payload]\n\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}