{"ast":null,"code":"import _objectSpread from \"/Users/duraanali/Pictures/Gabi/Sprint-Project-Redux-Countries/countries/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_COUNTRIES_START, FETCH_COUNTRIES_SUCCESS, FETCH_COUNTRIES_FAILURE, COUNTRY_ADD_START } from '../actions/CountryActions';\nconst initialState = {\n  countries: [],\n  fetchingCountries: false,\n  addingCountry: false,\n  updatingCountry: false,\n  deletingCountry: false,\n  error: null\n};\nexport const countryReducer = (state = initialState, action) => {\n  // Switch Statement, check if state changed\n  switch (action.type) {\n    case COUNTRY_FETCH_START:\n      return _objectSpread({}, state, {\n        fetchingCountries: true,\n        error: null\n      });\n\n    case COUNTRY_FETCH_SUCCESS:\n      return _objectSpread({}, state, {\n        fetchingCountries: false,\n        countries: action.payload,\n        error: null\n      });\n\n    case COUNTRY_FETCH_FAILURE:\n      return _objectSpread({}, state, {\n        fetchingCountries: false,\n        error: action.payload\n      });\n\n    case COUNTRY_ADD_START:\n      return _objectSpread({}, state, {\n        addingCountry: true,\n        error: null,\n        countries: [...state.countries, action.payload]\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/duraanali/Pictures/Gabi/Sprint-Project-Redux-Countries/countries/src/reducers/CountryReducer.js"],"names":["FETCH_COUNTRIES_START","FETCH_COUNTRIES_SUCCESS","FETCH_COUNTRIES_FAILURE","COUNTRY_ADD_START","initialState","countries","fetchingCountries","addingCountry","updatingCountry","deletingCountry","error","countryReducer","state","action","type","COUNTRY_FETCH_START","COUNTRY_FETCH_SUCCESS","payload","COUNTRY_FETCH_FAILURE"],"mappings":";AAAA,SACEA,qBADF,EAEEC,uBAFF,EAGEC,uBAHF,EAKEC,iBALF,QAMO,2BANP;AAQA,MAAMC,YAAY,GAChB;AACEC,EAAAA,SAAS,EAAE,EADb;AAEEC,EAAAA,iBAAiB,EAAE,KAFrB;AAGEC,EAAAA,aAAa,EAAE,KAHjB;AAIEC,EAAAA,eAAe,EAAE,KAJnB;AAKEC,EAAAA,eAAe,EAAE,KALnB;AAMEC,EAAAA,KAAK,EAAE;AANT,CADF;AAUA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9D;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,mBAAL;AACE,+BACKH,KADL;AAEEN,QAAAA,iBAAiB,EAAE,IAFrB;AAGEI,QAAAA,KAAK,EAAE;AAHT;;AAMA,SAAKM,qBAAL;AACA,+BACKJ,KADL;AAEEN,QAAAA,iBAAiB,EAAE,KAFrB;AAGED,QAAAA,SAAS,EAAEQ,MAAM,CAACI,OAHpB;AAIEP,QAAAA,KAAK,EAAE;AAJT;;AAMA,SAAKQ,qBAAL;AACA,+BACKN,KADL;AAEEN,QAAAA,iBAAiB,EAAE,KAFrB;AAGEI,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAHhB;;AAMA,SAAKd,iBAAL;AACA,+BACKS,KADL;AAEEL,QAAAA,aAAa,EAAE,IAFjB;AAGEG,QAAAA,KAAK,EAAE,IAHT;AAIEL,QAAAA,SAAS,EAAE,CAAC,GAAGO,KAAK,CAACP,SAAV,EAAqBQ,MAAM,CAACI,OAA5B;AAJb;;AAOF;AACE,aAAOL,KAAP;AA/BJ;AAiCD,CAnCM","sourcesContent":["import {\n  FETCH_COUNTRIES_START,\n  FETCH_COUNTRIES_SUCCESS,\n  FETCH_COUNTRIES_FAILURE,\n\n  COUNTRY_ADD_START,\n} from '../actions/CountryActions';\n\nconst initialState = \n  {\n    countries: [],\n    fetchingCountries: false,\n    addingCountry: false,\n    updatingCountry: false,\n    deletingCountry: false,\n    error: null\n  }\n\nexport const countryReducer = (state = initialState, action) => {\n  // Switch Statement, check if state changed\n  switch (action.type) {\n    case COUNTRY_FETCH_START:\n      return {\n        ...state,\n        fetchingCountries: true,\n        error: null\n\n      };\n      case COUNTRY_FETCH_SUCCESS:\n      return {\n        ...state,\n        fetchingCountries: false,\n        countries: action.payload,\n        error: null\n      };\n      case COUNTRY_FETCH_FAILURE:\n      return {\n        ...state,\n        fetchingCountries: false,\n        error: action.payload\n\n      };\n      case COUNTRY_ADD_START:\n      return {\n        ...state,\n        addingCountry: true,\n        error: null,\n        countries: [...state.countries, action.payload]\n\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}